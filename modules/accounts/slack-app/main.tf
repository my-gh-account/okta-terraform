#-------------------------------------------------------------------------------------------------------------------------------------
# VERSION REQUIREMENTS 
# Versions of Teraform and its providers pinned for stability
#-------------------------------------------------------------------------------------------------------------------------------------

terraform {
  required_version = "~> 1.1.0"
  required_providers {
    slack = {
      source  = "pablovarela/slack"
      version = "~> 1.0"
    }

    okta = {
      source  = "okta/okta"
      version = "~> 3.20"
    }
  }
}

#-------------------------------------------------------------------------------------------------------------------------------------
# DATA FOR OKTA_GROUPS/SLACK SPACES
# Pulls out the okta groups specified for slack and filters the account names by workspsaces variable.  This is because the slack
# provider has no api to redeploy the saml integration, so if all slack groups are removed from okta, and we dynamically create
# the aplication based on existing groups, it will delete any app without an assigned group, and then to redeploy requires us to
# go back into the slack api and recreate the saml integrtion.  We can dynamically create the assignemtns to it.
#-------------------------------------------------------------------------------------------------------------------------------------


data "okta_groups" "okta_groups" {}

locals {
  slack_groups     = [ for group in data.okta_groups.okta_groups.groups : group if(length(regexall("(?i)slack", element(split("-", group.name), 1))) > 0) ]
  account_names    = { for group in local.slack_groups : element(split("-", group.name), 2) => group.id if contains(var.workspaces, element(split("-", group.name), 2)) }
}

#-------------------------------------------------------------------------------------------------------------------------------------
# SLACK OKTA APP
# Application generated by var.apps variable, to integrate with slack
#-------------------------------------------------------------------------------------------------------------------------------------


resource "okta_app_saml" "slack" {
  for_each = toset(var.workspaces)
  accessibility_self_service = false
  auto_submit_toolbar        = false
  hide_ios                   = false
  hide_web                   = false
  honor_force_authn          = false
  label                      = each.value
  preconfigured_app          = "slack"
  saml_version               = "2.0"
  skip_groups                = false
  skip_users                 = false
  status                     = "ACTIVE"
  app_settings_json = jsonencode({
    "domain" : "${each.value}"
    "userEmailValue" : "true"
  })

  user_name_template_type = "BUILT_IN"
   lifecycle {
    ignore_changes  = [users, groups]
  }
}

#-------------------------------------------------------------------------------------------------------------------------------------
# SLACK OKTA APP ASSIGNMENTS 
# Application assignments generated dynamically based on valid workspace (var.apps variable).
#-------------------------------------------------------------------------------------------------------------------------------------

resource "okta_app_group_assignments" "SlackGroups" {

  for_each = { for key, value in okta_app_saml.slack : key => value if contains(var.workspaces, value.name) }
  app_id = each.value.id
  depends_on = [okta_app_saml.slack]   

  group {
      priority = 1
      id =  join("", [ for name, id  in local.account_names : id if name == each.key ] )
  }
}

